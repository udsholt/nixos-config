#!/usr/bin/env bash

if ! type "rerun" &> /dev/null; then
    echo "Please install 'rerun' by running:"
    echo "  go get github.com/skelterjohn/rerun"
    exit 1
fi

guess_binary_name() {
    local profile_filename="./Procfile"

    if [ ! -f "$profile_filename" ]; then
        return
    fi

    # Read the web: {binary} declaration from the procfile
    local procfile_web_binary=$(grep 'web:' $profile_filename | awk '{print $2}')
    if [ -z $procfile_web_binary ]; then
        return
    fi

    echo $procfile_web_binary
}

guess_binary_directory() {
    # The binary name is expected to be the first argument
    local binary_name="$1"

     # Assume that if the current directory is the same as
    # the package name, that it must contain the package
    # we want to run
    if [[ $binary_name == "${PWD##*/}" ]]; then
        local binary_directory="./"
    else
        local binary_directory="./$binary_name"
    fi

    # Expand binary package fully
    binary_directory=$(readlink -f $binary_directory)

    echo $binary_directory
}

guess_binary_package() {
    # The binary directory is expected to be the first argument
    local binary_directory="$1"

    # Extract the first part of the GOPATH
    # /first/part;/next/part;etc
    # |---------|
    local gopath_directory=$(echo $GOPATH | awk -F":" '{print $1}')
    if [ -z $gopath_directory ]; then
        return
    fi

    # Expand GOPATH fully, then determine the package name
    gopath_directory=$(readlink -f $gopath_directory)
    binary_package=${binary_directory#$gopath_directory/src/}

    # If the binary is not in the GOPATH the prefix removal would
    # have had no effect
    if [[ $binary_directory == $binary_package ]]; then
        return
    fi

    echo $binary_package
}

BINARY_NAME="$1"

if [ -z "$BINARY_NAME" ]; then
    BINARY_NAME="$(guess_binary_name)"
    if [ -z "$BINARY_NAME" ]; then
        echo "Could not guess binary name, either supply it as the first argument or add a Procfile."
        exit 1
    fi
fi

BINARY_DIRECTORY="$(guess_binary_directory $BINARY_NAME)"
if [ -z "$BINARY_NAME" ]; then
    echo "Could not guess binary directory."
    exit 1
fi

BINARY_PACKAGE="$(guess_binary_package $BINARY_DIRECTORY)"
if [ -z "$BINARY_PACKAGE" ]; then
    echo "Could not guess binary package."
    exit 1
fi

ENVIRONMENT_FILENAME="$BINARY_DIRECTORY/environment"
if [ ! -f $ENVIRONMENT_FILENAME ]; then
    echo "No envfile found for '$BINARY_NAME'. Perhaps you forgot to copy environment.dist to environment?"
else
    source $ENVIRONMENT_FILENAME
fi

rerun $BINARY_PACKAGE
